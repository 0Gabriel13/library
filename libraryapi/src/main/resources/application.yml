spring:
  application:
    name: libraryapi
##  profiles:
##    active: homologacao
    thymeleaf:
    cache: false # Desativa cache em desenvolvimento
    prefix: classpath:/templates/
    suffix: .html
    mode: HTML
    encoding: UTF-8
    servlet:
      content-type: text/html
  output:
    ansi:
      enabled: ALWAYS
  datasource:
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/library}
    username: ${DATASOURCE_USERNAME:postgres}
    password: ${DATASOURCE_PASSWORD:pgtest123}
    driver-class-name: org.postgresql.Driver
  jpa:
    show-sql: true
    hibernate:
#      ddl-auto: update
      ddl-auto: none
    properties:
      hibernate.format_sql: true
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
     
logging:
  pattern:
  # modificar data e cores dos logs:
    console: '%clr(%d{dd-MM-yyyy HH:mm:ss}){magenta} %clr(%5p) %clr([library]){faint} %clr(%-40.40logger){cyan} %clr(:){yellow} %m%n'
  file:
    name: libraryAPI.log
  level:
    root: warn 
    io:
      github:
         cursosb: trace
    org:
      springframework:
        web: debug
        security: trace
        
        
# |HIERARQUIA DE LOGS:|
# trace
# debug
# info
# warn
# error


# Utilizando o Actuator para obter métricas da aplicação:
management:
  server:
    port: 9090
  endpoints: 
    web:
      exposure:
        include: '*' 
        
        
springdoc:
  override-with-generic-response: false  
              
                
              
              